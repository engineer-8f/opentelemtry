version: '3.8'

networks:
  local:
    driver: bridge

services:
  osint.bot:
    image: osint.bot:latest
    container_name: 'osint.bot'
    hostname: 'osint.bot'
    ports:
      - "8090:80"
    build:
      context: .
      dockerfile: Osint.Clients/Osint.Bot/Dockerfile
    env_file:
      - .env
    environment:
      OTEL_SERVICE_NAME: "Osint.Bot"
      OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES: "Osint.Bot"
      OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=local,service.version=0.0.1"
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    links:
      - rabbitmq
#      - osint.source.one
      - osint.source.two
      - otel-collector
    networks:
      - local

  osint.source.one:
    image: osint.source.one:latest
    container_name: 'osint.source.one'
    hostname: 'osint.source.one'
    ports:
      - "8091:80"
    build:
      context: .
      dockerfile: Osint.Sources/Osint.Source.One/Dockerfile
    env_file:
      - .env
    environment:
      OTEL_SERVICE_NAME: "Osint.Source.One"
      OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES: "Osint.Source.One"
      OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=local,service.version=0.0.1"
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    links:
      - rabbitmq
      - otel-collector
    networks:
      - local

  osint.source.two:
    image: osint.source.two:latest
    container_name: 'osint.source.two'
    hostname: 'osint.source.two'
    ports:
      - "8092:80"
    build:
      context: .
      dockerfile: Osint.Sources/Osint.Source.Two/Dockerfile
    env_file:
      - .env
    environment:
      OTEL_SERVICE_NAME: "Osint.Source.Two"
      OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES: "Osint.Source.Two"
      OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=local,service.version=0.0.1"
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    links:
      - rabbitmq
      - otel-collector
    networks:
      - local

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    hostname: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      start_period: 20s
      retries: 4
    networks:
      - local

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel-config.yaml:/etc/otel/config.yaml
      - ./log:/log/otel
    command: --config /etc/otel/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
      LOKI_ENDPOINT: "http://loki:3100/loki/api/v1/push"
    ports:
      - "8889:8889"   # Prometheus metrics exporter (scrape endpoint)
      - "13133:13133" # health_check extension
      - "55679:55679" # ZPages extension
    networks:
      - local
    depends_on:
      - jaeger
      - prometheus
      - loki

  prometheus:
    image: prom/prometheus:v2.42.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - local

  loki:
    image: grafana/loki:2.7.4
    ports:
      - "3100:3100"
    networks:
      - local

  grafana:
    image: grafana/grafana:9.4.3
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    ports:
      - "3000:3000"
    networks:
      - local

  jaeger:
    image: jaegertracing/all-in-one:1.50.0
    container_name: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686" # Jaeger UI
    networks:
      - local